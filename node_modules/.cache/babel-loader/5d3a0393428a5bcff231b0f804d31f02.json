{"remainingRequest":"/home/magaligarot/BeCode/WorkShop-Vue.js/node_modules/thread-loader/dist/cjs.js!/home/magaligarot/BeCode/WorkShop-Vue.js/node_modules/babel-loader/lib/index.js!/home/magaligarot/BeCode/WorkShop-Vue.js/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/magaligarot/BeCode/WorkShop-Vue.js/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/magaligarot/BeCode/WorkShop-Vue.js/src/components/List.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/magaligarot/BeCode/WorkShop-Vue.js/src/components/List.vue","mtime":1615890049799},{"path":"/home/magaligarot/BeCode/WorkShop-Vue.js/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/magaligarot/BeCode/WorkShop-Vue.js/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/magaligarot/BeCode/WorkShop-Vue.js/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/magaligarot/BeCode/WorkShop-Vue.js/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/magaligarot/BeCode/WorkShop-Vue.js/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlLmpzIjsKZXhwb3J0IGRlZmF1bHQgewogIC8vZGF0YSA6IFBlcm1ldCBxdWUgbGVzIGRvbm7DqWVzIGV0IGxlIERPTSBzb2llbnQgY291cGzDqXMKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaXNFZGl0aW5nOiBmYWxzZSwKICAgICAgc2VsZWN0ZWRJbmRleDogbnVsbCwKICAgICAgdG9kbzogJycsCiAgICAgIHRvZG9zOiBbJ0xlYXJuIFZ1ZS5qcycsICdMb3ZlIGNob2NvbGF0ZSddCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgLy9NRVRIT0RFUyA6CiAgICAvLyBMZXMgbcOpdGhvZGVzIHZvdXMgcGVybWV0dGVudCBkZSBkw6lmaW5pciBkZXMgZm9uY3Rpb25zIGF1eHF1ZWxsZXMgCiAgICAvLyB2b3RyZSBhcHBsaWNhdGlvbiBWdWUgYXVyYSBhY2PDqHMuIAogICAgLy8gRWxsZXMgc29udCBkw6lmaW5pZXMgY29tbWUgbGEgcHJvcHJpw6l0w6kgIGRhdGEuCiAgICAvLyByZWxpZSBsZSBib3V0b24gc3RvcmVUb2RvCiAgICBzdG9yZVRvZG86IGZ1bmN0aW9uIHN0b3JlVG9kbygpIHsKICAgICAgLy9Cb3V0b24gcXVpIHBlcm1ldCBkJ2Fqb3V0ZXIgZGVzIMOpbMOpbWVudHMgw6AgbGEgbGlzdGUKICAgICAgLy8gVEhJUyA6IHRoaXMgZXN0IHVuIG9ww6lyYXRldXIgcXVpIHBlcm1ldCBkZSByZXRvdXJuZXIgCiAgICAgIC8vdW5lIHZhbGV1ciBlbiBmb25jdGlvbiBkZSBzb24gY29udGV4dGUuIAogICAgICAvL3RoaXMgcmV0b3VybmUgbOKAmW9iamV0IAogICAgICAvLyBQVVNIIDogbcOpdGhvZGVzIGVuY2Fwc3Vsw6llcyBxdWkgdmEgcGVybWV0dHJlIGQnYWpvdXRlciAKICAgICAgLy8gZGVzIG5vdXZlYXV4IMOpbGVtZW50cyBkcyBsYSBsaXN0ZSB0b2RvcwogICAgICB0aGlzLnRvZG9zLnB1c2godGhpcy50b2RvKTsKICAgICAgdGhpcy50b2RvID0gJyc7IC8vQWpvdXRlIGxlcyBub3V2ZWF1eCDDqWxlbWVudHMgZGFucyBsZSB0YWJsZWF1IHRvZG9zCgogICAgICBjb25zb2xlLmxvZygnc3RvcmUgdG9kb3MnKTsKICAgICAgY29uc29sZS5sb2codGhpcy50b2Rvcyk7CiAgICB9LAogICAgLy9QZXJtZXQgZGUgcmVsaWVyIGxlIGJvdXRvbiBlZGl0VG9kbywgYm91dG9uIHF1aSDDqWRpdGUgbGEgbGlzdGUKICAgIGVkaXRUb2RvOiBmdW5jdGlvbiBlZGl0VG9kbyhpbmRleCwgdG9kbykgewogICAgICB0aGlzLnRvZG8gPSB0b2RvOwogICAgICB0aGlzLnNlbGVjdGVkSW5kZXggPSBpbmRleDsKICAgICAgdGhpcy5pc0VkaXRpbmcgPSB0cnVlOwogICAgfSwKICAgIC8vbGUgYm91dG9uIGFkZCBxdWkgZGV2aWVudCB1cGRhdGUgYWZpbiBkZSByZW52b3llciBsZSBsaXN0ZSBtb2RpZmnDqWUKICAgIHVwZGF0ZVRvZG86IGZ1bmN0aW9uIHVwZGF0ZVRvZG8oKSB7CiAgICAgIC8vU1BMSUNFIDogbGEgbcOpdGhvZGUgc3BsaWNlKCkgcGVybWV0IGQnaW5zw6lyZXIgdW4gw6lsZW1lbnQgw6AgbGEgcGxhY2UgZCd1biBhdXRyZQogICAgICAvL2NldHRlIG3DqXRob2RlIMOpY3Jhc2UgdW5lIHRyYW5jaGUgZHUgdGFibGVhdSBwYXIgdW5lIGF1dHJlLCBzcGxpY2UgYXR0ZW5kIHVuIG5vbWJyZSwKICAgICAgLy9pY2kgc3BsaWNlIHN1cHByaW1lIHRoaXMuc2VsZWN0ZWRJbmRleCBwb3VyIGxlIHJlbXBsYWNlciBwYXIgdGhpcy50b2RvCiAgICAgIHRoaXMudG9kb3Muc3BsaWNlKHRoaXMuc2VsZWN0ZWRJbmRleCwgMSwgdGhpcy50b2RvKTsKICAgICAgdGhpcy5pc0VkaXRpbmcgPSBmYWxzZTsgLy91bmUgZm9pcyBxdWUgbCfDqWxlbWVudCDDoCDDqXTDqSBjaGFuZ8OpIHZpYSB1cGRhdGUgaWwgcmVwYXNzZSBzdXIgZmFsc2UKICAgICAgLy9wb3VyIHF1ZSBub3RyZSBib3V0b24gYWRkIHJldmllbm5lCiAgICB9LAogICAgLy9Cb3V0b24gZGVsZXRlCiAgICBkZWxldGVUb2RvOiBmdW5jdGlvbiBkZWxldGVUb2RvKGluZGV4KSB7CiAgICAgIHRoaXMudG9kb3Muc3BsaWNlKGluZGV4LCAxKTsgLy9zdXBwcmltZSB1biDDqWxlbWVudCBkZSBsJ2luZGV4CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/home/magaligarot/BeCode/WorkShop-Vue.js/src/components/List.vue"],"names":[],"mappings":";AA8BA,eAAe;AACX;AACA,EAAA,IAAI,EAAE,gBAAM;AACR,WAAO;AACH,MAAA,SAAS,EAAE,KADR;AAEH,MAAA,aAAa,EAAE,IAFZ;AAGH,MAAA,IAAI,EAAE,EAHH;AAIH,MAAA,KAAK,EAAE,CAAC,cAAD,EAAiB,gBAAjB;AAJJ,KAAP;AAMH,GATU;AAUX,EAAA,OAAO,EAAE;AACL;AACA;AACA;AACA;AAEC;AACD,IAAA,SAPK,uBAOO;AACR;AAEA;AACA;AACA;AAEA;AACA;AAEA,WAAK,KAAL,CAAW,IAAX,CAAgB,KAAK,IAArB;AACA,WAAK,IAAL,GAAW,EAAX,CAXQ,CAaR;;AACA,MAAA,OAAO,CAAC,GAAR,CAAY,aAAZ;AACA,MAAA,OAAO,CAAC,GAAR,CAAY,KAAK,KAAjB;AACH,KAvBI;AAyBL;AACC,IAAA,QA1BI,oBA0BK,KA1BL,EA0BY,IA1BZ,EA0BkB;AACnB,WAAK,IAAL,GAAY,IAAZ;AACA,WAAK,aAAL,GAAqB,KAArB;AACA,WAAK,SAAL,GAAiB,IAAjB;AACH,KA9BI;AAgCL;AACA,IAAA,UAjCK,wBAiCQ;AACT;AACA;AACA;AACA,WAAK,KAAL,CAAW,MAAX,CAAkB,KAAK,aAAvB,EAAsC,CAAtC,EAAyC,KAAK,IAA9C;AACA,WAAK,SAAL,GAAiB,KAAjB,CALS,CAOT;AACA;AACH,KA1CI;AA4CD;AACJ,IAAA,UA7CK,sBA6CM,KA7CN,EA6Ca;AAClB,WAAK,KAAL,CAAW,MAAX,CAAkB,KAAlB,EAAyB,CAAzB,EADkB,CAEd;AACR;AAhDS;AAVE,CAAf","sourcesContent":["<template>\n      \n        <!-- v-if ou v-else suivant sur true ou false afin d'ajouter (add)\n        ou de modifier (updateTodo) -->\n\n        <div v-if=\"!isEditing\">\n            <!-- ! différent de -->\n            <input type='text' v-model=\"todo\">\n            <!-- V-MODEL : v-model crée une liaison de données sur les champs de formulaire \n            (input, select ou textarea) -->\n            <input class=\"typebutton\" type='submit' value=\"add\" @click=\"storeTodo\">\n        </div>\n     \n        <div v-else>\n            <input type='text' v-model=\"todo\">\n            <input class=\"typebutton\" type='submit' value=\"update\" @click=\"updateTodo\">\n        </div>\n\n        <ol>\n            <!-- Affiche notre liste -->\n            <li class=\"textwhite\" v-for=\"(todo, index) in todos\" :key=\"todo\">\n                {{ todo }}\n                <button @click=\"editTodo(index, todo)\">Edit</button>\n                <button @click=\"deleteTodo(index)\">Delete</button>\n            </li>\n        </ol>\n</template>\n\n<script>\n\nexport default {\n    //data : Permet que les données et le DOM soient couplés\n    data: () => {\n        return {\n            isEditing: false,\n            selectedIndex: null,\n            todo: '',\n            todos: ['Learn Vue.js', 'Love chocolate'],\n        }\n    },\n    methods: {\n        //METHODES :\n        // Les méthodes vous permettent de définir des fonctions auxquelles \n        // votre application Vue aura accès. \n        // Elles sont définies comme la propriété  data.\n        \n         // relie le bouton storeTodo\n        storeTodo() {\n            //Bouton qui permet d'ajouter des éléments à la liste\n\n            // THIS : this est un opérateur qui permet de retourner \n            //une valeur en fonction de son contexte. \n            //this retourne l’objet \n\n            // PUSH : méthodes encapsulées qui va permettre d'ajouter \n            // des nouveaux élements ds la liste todos\n\n            this.todos.push(this.todo)\n            this.todo =''\n\n            //Ajoute les nouveaux élements dans le tableau todos\n            console.log('store todos');\n            console.log(this.todos);\n        },\n\n        //Permet de relier le bouton editTodo, bouton qui édite la liste\n         editTodo(index, todo) {\n            this.todo = todo\n            this.selectedIndex = index\n            this.isEditing = true\n        },\n\n        //le bouton add qui devient update afin de renvoyer le liste modifiée\n        updateTodo() {\n            //SPLICE : la méthode splice() permet d'insérer un élement à la place d'un autre\n            //cette méthode écrase une tranche du tableau par une autre, splice attend un nombre,\n            //ici splice supprime this.selectedIndex pour le remplacer par this.todo\n            this.todos.splice(this.selectedIndex, 1, this.todo)\n            this.isEditing = false\n          \n            //une fois que l'élement à été changé via update il repasse sur false\n            //pour que notre bouton add revienne\n        },\n\n            //Bouton delete\n        deleteTodo(index) {\n        this.todos.splice(index, 1)\n            //supprime un élement de l'index\n    }\n    }\n}\n</script>\n\n<style>\n\n    /* TO DO LIST STYLE*/\n\n    button, .typebutton{\n        background-color:rgb(228, 132, 22);\n        border:none;\n        border-radius: 20px;\n        padding: 1.2rem 1.2rem;\n        margin: 1rem 1rem;\n        font-family: 'Satisfy', cursive;\n        font-size: 1.5rem;\n        color: white;\n    }\n\n    .textwhite{\n        font-size: 1.5rem;\n        font-family: 'IBM Plex Mono', monospace;\n        color: white;\n    }\n\n</style>"],"sourceRoot":""}]}